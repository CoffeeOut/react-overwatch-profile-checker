{"version":3,"sources":["components/Header/Header.js","components/UI/Logo/Logo.js","components/UI/NavList/NavList.js","components/SideMenu/SideMenu.js","components/Main/Main.js","components/UI/TextInput/TextInput.js","components/UI/Button/Button.js","components/Search/Search.js","components/Profile/Header/Header.js","components/Profile/Table/Table.js","components/Profile/Profile.js","components/History/Element/Element.js","components/History/History.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","children","className","Logo","mainLogoURL","smallScreenLogoURL","useState","window","innerWidth","currentDeviceWidth","setDeviceWidth","addEventListener","classNames","src","alt","NavList","elementNames","setSelectedPage","map","elementName","i","onClick","key","SideMenu","activeElement","closeSideMenu","sideMenuRef","useRef","handleClickOutsideSideMenu","e","current","contains","target","useEffect","removeEventListener","ref","Main","backgroundURL","style","backgroundImage","TextInput","placeholder","onChange","type","value","Button","imageURL","text","Search","onSearch","inputValue","setInputValue","ProfileHeader","avatarURL","borderURL","starsURL","battleTag","highestRank","avatarBorderStyle","avatarStyle","rankIcon","level","Table","title","keys","values","every","heroesList","label","url","gameModesList","Profile","played","won","data","selectedHero","setSelectedHero","selectedGameMode","setSelectedGameMode","selectedGameModeData","selectedHeroData","careerStats","ratings","concat","sort","prevRank","nextRank","reverse","selectedSettingsStyle","filteredHeroesList","filter","hero","Object","includes","filteredGameModesList","gameMode","icon","levelIcon","prestigeIcon","name","breakpointCols","default","1200","768","columnClassName","options","defaultValue","isSearchable","prestige","gamesWon","rating","role","toUpperCase","game","gamesPlayed","gamesLost","gamesTied","isFinite","Math","round","timePlayed","matchAwards","cards","medalsGold","medalsSilver","medalsBronze","combat","eliminations","damageDone","barrierDamageDone","objectiveKills","assists","healingDone","objectiveTime","offensiveAssists","defensiveAssists","timeSpentOnFire","deaths","best","eliminationsMostInGame","allDamageDoneMostInGame","barrierDamageDoneMostInGame","objectiveKillsMostInGame","healingDoneMostInGame","objectiveTimeMostInGame","offensiveAssistsMostInGame","defensiveAssistsMostInGame","timeSpentOnFireMostInGame","average","eliminationsAvgPer10Min","allDamageDoneAvgPer10Min","barrierDamageDoneAvgPer10Min","objectiveKillsAvgPer10Min","healingDoneAvgPer10Min","objectiveTimeAvgPer10Min","offensiveAssistsAvgPer10Min","defensiveAssistsAvgPer10Min","timeSpentOnFireAvgPer10Min","deathsAvgPer10Min","Element","nickName","date","isLocked","onLock","onUnlock","onCopy","onDelete","isButtonPanelOpen","setIsButtonPanelOpen","units","number","howLongAgo","timestamp","difference","Date","now","getTime","result","unit","History","JSON","parse","localStorage","getItem","storage","updateStorage","storageCopy","elementForLock","find","element","reduce","accumulator","currentValue","length","elementForUnlock","string","navigator","clipboard","writeText","then","catch","err","elementForDelete","setItem","stringify","some","searchRequest","Footer","App","openedPage","setOpenedPage","isSideBarMenuOpen","setIsSideBarMenuOpen","searchErrorMessage","setSearchErrorMessage","setSearchRequest","searchResult","setSearchResult","scrollTo","top","behavior","object","splice","unshift","saveToLocalStorage","navElementNames","isOpen","menuClicked","strokeWidth","color","request","validationResult","validationObject","trim","error","test","normalizedPlatforms","splittedValue","split","toLowerCase","success","battleTagValidation","join","platform","replace","fetch","response","json","private","toString","href","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d0bf7d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\nconst Header = ({children}) => {\r\n    return (\r\n        <header className='page-header'>\r\n            {children}\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, {useState} from 'react';\r\nimport './Logo.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst Logo = ({className, mainLogoURL, smallScreenLogoURL}) => {\r\n\r\n    const [currentDeviceWidth, setDeviceWidth] = useState(window.innerWidth);\r\n\r\n    window.addEventListener('resize', () => {\r\n        setDeviceWidth(window.innerWidth);\r\n    });\r\n\r\n    return (\r\n        <img\r\n            className={classNames('logo', className)}\r\n            src={currentDeviceWidth >= 1024 ? mainLogoURL : smallScreenLogoURL || mainLogoURL}\r\n            alt='logo'\r\n        />\r\n    )\r\n\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './NavList.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst NavList = ({className, elementNames, setSelectedPage}) => {\r\n    return (\r\n        <ul className={classNames('nav-list', className)}>\r\n            {elementNames.map((elementName, i) =>\r\n                <li\r\n                    className='nav-list__element'\r\n                    onClick={() => setSelectedPage(i)}\r\n                    key={i}>{elementName}\r\n                </li>\r\n            )}\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default NavList;","import React, { useRef, useEffect } from 'react';\r\nimport './SideMenu.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst SideMenu = ({className, elementNames, setSelectedPage, activeElement, closeSideMenu}) => {\r\n\r\n    const sideMenuRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', handleClickOutsideSideMenu);\r\n        return () => { window.removeEventListener('click', handleClickOutsideSideMenu)};\r\n    }, []);\r\n\r\n    function handleClickOutsideSideMenu(e) {\r\n        if(!sideMenuRef.current.contains(e.target)) {\r\n            closeSideMenu();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classNames('side-menu', className)} ref={sideMenuRef}>\r\n            {elementNames.map((elementName, i) =>\r\n                <div\r\n                    className={classNames('side-menu__element', activeElement === i && 'side-menu__element_active')}\r\n                    onClick={() => setSelectedPage(i)}\r\n                    key={i}>{elementName}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SideMenu;","import React from 'react';\r\nimport './Main.scss';\r\n\r\nconst Main = ({backgroundURL, children}) => {\r\n    return (\r\n        <main\r\n            className='page-main'\r\n            style={{backgroundImage: `url(\"${backgroundURL}\")`}}>\r\n            {children}\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport './TextInput.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst TextInput = ({className, placeholder, onChange}) => {\r\n    return (\r\n        <input\r\n            className={classNames('text-input', className)}\r\n            type='text'\r\n            placeholder={placeholder}\r\n            onChange={e => onChange(e.target.value)}\r\n        />\r\n    )\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport './Button.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst Button = ({className, imageURL, text, onClick}) => {\r\n    return (\r\n        <button\r\n            className={classNames('button', className)}\r\n            type='button'\r\n            onClick={onClick}>\r\n            {imageURL ?\r\n                <img\r\n                    className='button__image'\r\n                    src={imageURL}\r\n                    alt=''\r\n                /> : text}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button;","import React, {useState} from 'react';\r\nimport './Search.scss';\r\nimport TextInput from \"../UI/TextInput/TextInput\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classNames from 'classnames';\r\n\r\nconst Search = ({className, placeholder, onSearch, children}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(null);\r\n\r\n    return (\r\n        <div className={classNames('search', className)}>\r\n            <TextInput\r\n                className='search__input'\r\n                placeholder={placeholder}\r\n                onChange={setInputValue}\r\n            />\r\n            <Button\r\n                className='search__button'\r\n                imageURL='https://tinyurl.com/yc9bsx8s'\r\n                onClick={() => onSearch(inputValue)}\r\n            />\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport './Header.scss';\r\n\r\nconst ProfileHeader = ({avatarURL, borderURL, starsURL, battleTag, highestRank}) => {\r\n\r\n    const avatarBorderStyle = {\r\n        backgroundImage: `url(\"${starsURL}\"), url(\"${borderURL}\")`\r\n    };\r\n\r\n    const avatarStyle = {\r\n        backgroundImage: `url(\"${avatarURL}\")`\r\n    };\r\n\r\n    return (\r\n        <div className='profile-header'>\r\n            <div className='profile-header__avatar-wrapper'>\r\n                <div\r\n                    className='avatar-wrapper__border'\r\n                    style={avatarBorderStyle}\r\n                />\r\n                <div\r\n                    className='avatar-wrapper__avatar'\r\n                    style={avatarStyle}\r\n                />\r\n            </div>\r\n            <p className='profile-header__battle-tag'>{battleTag}</p>\r\n            <div className='profile-header__rank-wrapper'>\r\n                {highestRank &&\r\n                    <>\r\n                        <img\r\n                            src={highestRank.rankIcon}\r\n                            className='rank-wrapper__highest-rank-icon'\r\n                            alt='highest rank'/>\r\n                        <span className='rank-wrapper__highest-rank'>{highestRank.level}</span>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileHeader;","import React from 'react';\r\nimport './Table.scss';\r\n\r\nconst Table = ({title, keys, values}) => {\r\n\r\n    if(values.every(value => !value)) return ('');\r\n\r\n    return (\r\n        <div className='profile-table'>\r\n            <div className='profile-table__title-wrapper'>\r\n                <p className='profile-table__title'>{title}</p>\r\n            </div>\r\n            {values.map((value, i) =>\r\n                !!value &&\r\n                <div className='profile-table__table-row'>\r\n                    <p className='table-row__key'>{keys[i]}</p>\r\n                    <p className='table-row__value'>{value}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Table;","import React, { useState } from 'react';\r\nimport './Profile.scss';\r\nimport ProfileHeader from \"./Header/Header\";\r\nimport Table from \"./Table/Table\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport {default as Select} from \"react-select\";\r\n\r\n\r\nconst heroesList = [\r\n    {value: 'allHeroes', label: 'ALL HEROES', url: 'https://tinyurl.com/y8bfkvvc'},\r\n    {value: 'ana', label: 'ANA', url: 'https://tinyurl.com/yaawpajm'},\r\n    {value: 'ashe', label: 'ASHE', url: 'https://tinyurl.com/yaurd3lo'},\r\n    {value: 'baptiste', label: 'BAPTISTE', url: 'https://tinyurl.com/ycbnchxl'},\r\n    {value: 'bastion', label: 'BASTION', url: 'https://tinyurl.com/ybxl7bwe'},\r\n    {value: 'brigitte', label: 'BRIGITTE', url: 'https://tinyurl.com/y7b8wrpz'},\r\n    {value: 'dVa', label: 'D.VA', url: 'https://tinyurl.com/ybds8qhp'},\r\n    {value: 'doomfist', label: 'DOOMFIST', url: 'https://tinyurl.com/y9pmehpg'},\r\n    {value: 'echo', label: 'ECHO', url: 'https://tinyurl.com/y7gjgnd2'},\r\n    {value: 'genji', label: 'GENJI', url: 'https://tinyurl.com/ya95zysp'},\r\n    {value: 'hanzo', label: 'HANZO', url: 'https://tinyurl.com/yaal5s8e'},\r\n    {value: 'junkrat', label: 'JUNKRAT', url: 'https://tinyurl.com/y6veqefm'},\r\n    {value: 'lucio', label: 'LUCIO', url: 'https://tinyurl.com/ybewf28e'},\r\n    {value: 'mccree', label: 'MCCREE', url: 'https://tinyurl.com/yaaog9yq'},\r\n    {value: 'mei', label: 'MEI', url: 'https://tinyurl.com/y9stlznx'},\r\n    {value: 'mercy', label: 'MERCY', url: 'https://tinyurl.com/y9bygogj'},\r\n    {value: 'moira', label: 'MOIRA', url: 'https://tinyurl.com/ybjdruee'},\r\n    {value: 'orisa', label: 'ORISA', url: 'https://tinyurl.com/y9ywg3y2'},\r\n    {value: 'pharah', label: 'PHARAH', url: 'https://tinyurl.com/yckq8h3a'},\r\n    {value: 'reaper', label: 'REAPER', url: 'https://tinyurl.com/y7u5wey7'},\r\n    {value: 'reinhardt', label: 'REINHARDT', url: 'https://tinyurl.com/ydx8g3ea'},\r\n    {value: 'roadhog', label: 'ROADHOG', url: 'https://tinyurl.com/ydb4fejk'},\r\n    {value: 'sigma', label: 'SIGMA', url: 'https://tinyurl.com/y7ecotes'},\r\n    {value: 'soldier76', label: 'SOLDIER 76', url: 'https://tinyurl.com/ybxmehbl'},\r\n    {value: 'sombra', label: 'SOMBRA', url: 'https://tinyurl.com/y8y4d6q6'},\r\n    {value: 'symmetra', label: 'SYMMETRA', url: 'https://tinyurl.com/yblf7ruh'},\r\n    {value: 'torbjorn', label: 'TORBJORN', url: 'https://tinyurl.com/yc7n2pz9'},\r\n    {value: 'tracer', label: 'TRACER', url: 'https://tinyurl.com/ybdedwev'},\r\n    {value: 'widowmaker', label: 'WIDOWMAKER', url: 'https://tinyurl.com/ycr6athr'},\r\n    {value: 'winston', label: 'WINSTON', url: 'https://tinyurl.com/yd7abtsu'},\r\n    {value: 'wreckingBall', label: 'WRECKING BALL', url: 'https://tinyurl.com/yco9kbqq'},\r\n    {value: 'zarya', label: 'ZARYA', url: 'https://tinyurl.com/y74lmzow'},\r\n    {value: 'zenyatta', label: 'ZENYATTA', url: 'https://tinyurl.com/yb5r32tj'},\r\n];\r\n\r\nconst gameModesList = [\r\n    {value: 'competitive', label: 'COMPETITIVE', url: 'https://tinyurl.com/yd942owc'},\r\n    {value: 'quickPlay', label: 'QUICK PLAY', url: 'https://tinyurl.com/y8ee2t3q'}\r\n];\r\n\r\nfunction countWinRate(played, won) {\r\n    if (!played || !isFinite(won)) return null;\r\n    return Math.round(won * 100 / played) + '%';\r\n}\r\n\r\n\r\nconst Profile = ({data}) => {\r\n\r\n    const [selectedHero, setSelectedHero] = useState(heroesList[0]);\r\n    const [selectedGameMode, setSelectedGameMode] = useState(gameModesList[0]);\r\n\r\n    const selectedGameModeData = data[selectedGameMode.value + 'Stats'];\r\n    const selectedHeroData = selectedGameModeData.careerStats[selectedHero.value];\r\n\r\n    const highestRank = !!data.ratings &&\r\n        [].concat(data.ratings)\r\n            .sort((prevRank, nextRank) => prevRank.level - nextRank.level)\r\n            .reverse()[0]; //if the player has been calibrated, this variable will contain data of the highest rank\r\n\r\n    const selectedSettingsStyle = {\r\n        backgroundImage: `url(\"${selectedHero.url}\"), url(\"${selectedGameMode.url}\")`\r\n    };\r\n\r\n    const filteredHeroesList = heroesList.filter(hero => Object.keys(selectedGameModeData.careerStats).includes(hero.value));\r\n    //this variable contains filtered heroes list(only heroes, which player played)\r\n\r\n    const filteredGameModesList = gameModesList.filter(gameMode => Object.keys(data[gameMode.value + 'Stats'].careerStats).includes(selectedHero.value));\r\n    //this variable contains filtered game modes list(only game mods, where player played selected hero)\r\n\r\n    const masonryBreakPointCols = {\r\n        default: 3,\r\n        1200: 2,\r\n        768: 1\r\n    };\r\n\r\n    return (\r\n        <div className='profile'>\r\n\r\n            <ProfileHeader\r\n                avatarURL={data.icon}\r\n                borderURL={data.levelIcon}\r\n                starsURL={data.prestigeIcon}\r\n                battleTag={data.name}\r\n                highestRank={highestRank}\r\n            />\r\n\r\n            <Masonry\r\n                breakpointCols={masonryBreakPointCols}\r\n                className='profile-tables-wrapper'\r\n                columnClassName='profile-tables-wrapper__column'>\r\n\r\n                <div className='profile-tables-wrapper__control-panel'>\r\n                    <Select\r\n                        className='control-panel__select'\r\n                        options={filteredHeroesList}\r\n                        onChange={setSelectedHero}\r\n                        value={selectedHero}\r\n                        defaultValue={selectedHero}\r\n                        isSearchable={true}\r\n                    />\r\n                    <div\r\n                        className='control-panel__selectedSettings'\r\n                        style={selectedSettingsStyle}\r\n                    />\r\n                    <Select\r\n                        className='control-panel__select'\r\n                        options={filteredGameModesList}\r\n                        onChange={setSelectedGameMode}\r\n                        value={selectedGameMode}\r\n                        defaultValue={selectedGameMode}\r\n                        isSearchable={false}\r\n                    />\r\n                </div>\r\n\r\n                <Table\r\n                    title='CAREER'\r\n                    keys={[\r\n                        'NICKNAME',\r\n                        'LEVEL',\r\n                        'GAMES WON',\r\n                        'AVERAGE RATING'\r\n                    ]}\r\n                    values={[\r\n                        data.name,\r\n                        data.prestige * 100 + data.level,\r\n                        data.gamesWon,\r\n                        data.rating || '-'\r\n                    ]}\r\n                />\r\n\r\n                {!!data.ratings &&\r\n                    <Table\r\n                        title='RATINGS'\r\n                        keys={[].concat(data.ratings).map(rating => rating.role.toUpperCase())}\r\n                        values={[].concat(data.ratings).map(rating =>\r\n                            <>\r\n                                <img className='table-row__image' src={rating.rankIcon} alt='rank icon'/>\r\n                                <span>{rating.level}</span>\r\n                            </>\r\n                        )}\r\n                    />\r\n                }\r\n\r\n                <Table\r\n                    title={'GENERAL: ' + selectedHero.label}\r\n                    keys={[\r\n                        'GAMES PLAYED',\r\n                        'GAMES WON',\r\n                        'GAMES LOST',\r\n                        'GAMES DRAW',\r\n                        'WINRATE',\r\n                        'TIME PLAYED',\r\n                        'CARDS',\r\n                        'GOLD MEDALS',\r\n                        'SILVER MEDALS',\r\n                        'BRONZE MEDALS'\r\n                    ]}\r\n                    values={[\r\n                        selectedHeroData.game && selectedHeroData.game.gamesPlayed,\r\n                        selectedHeroData.game && selectedHeroData.game.gamesWon,\r\n                        selectedHeroData.game && selectedHeroData.game.gamesLost,\r\n                        selectedHeroData.game && selectedHeroData.game.gamesTied,\r\n                        countWinRate(\r\n                            selectedHeroData.game && selectedHeroData.game.gamesPlayed,\r\n                            selectedHeroData.game && selectedHeroData.game.gamesWon\r\n                        ),\r\n                        selectedHeroData.game && selectedHeroData.game.timePlayed,\r\n                        selectedHeroData.matchAwards && selectedHeroData.matchAwards.cards,\r\n                        selectedHeroData.matchAwards && selectedHeroData.matchAwards.medalsGold,\r\n                        selectedHeroData.matchAwards && selectedHeroData.matchAwards.medalsSilver,\r\n                        selectedHeroData.matchAwards && selectedHeroData.matchAwards.medalsBronze\r\n                    ]}\r\n                />\r\n\r\n                <Table\r\n                    title={'COMBAT: ' + selectedHero.label}\r\n                    keys={[\r\n                        'ELIMINATIONS',\r\n                        'DAMAGE DONE',\r\n                        'BARRIER DAMAGE DONE',\r\n                        'OBJECTIVE KILLS',\r\n                        'HEALING DONE',\r\n                        'OBJECTIVE TIME',\r\n                        'OFFENSIVE ASSISTS',\r\n                        'DEFENSIVE ASSISTS',\r\n                        'ON FIRE',\r\n                        'DEATHS'\r\n                    ]}\r\n                    values={[\r\n                        selectedHeroData.combat && selectedHeroData.combat.eliminations,\r\n                        selectedHeroData.combat && selectedHeroData.combat.damageDone,\r\n                        selectedHeroData.combat && selectedHeroData.combat.barrierDamageDone,\r\n                        selectedHeroData.combat && selectedHeroData.combat.objectiveKills,\r\n                        selectedHeroData.assists && selectedHeroData.assists.healingDone,\r\n                        selectedHeroData.combat && selectedHeroData.combat.objectiveTime,\r\n                        selectedHeroData.assists && selectedHeroData.assists.offensiveAssists,\r\n                        selectedHeroData.assists && selectedHeroData.assists.defensiveAssists,\r\n                        selectedHeroData.combat && selectedHeroData.combat.timeSpentOnFire,\r\n                        selectedHeroData.combat && selectedHeroData.combat.deaths\r\n                    ]}\r\n                />\r\n\r\n                <Table\r\n                    title={'BEST: ' + selectedHero.label}\r\n                    keys={[\r\n                        'ELIMINATIONS',\r\n                        'DAMAGE DONE',\r\n                        'BARRIER DAMAGE DONE',\r\n                        'OBJECTIVE KILLS',\r\n                        'HEALING DONE',\r\n                        'OBJECTIVE TIME',\r\n                        'OFFENSIVE ASSISTS',\r\n                        'DEFENSIVE ASSISTS',\r\n                        'ON FIRE'\r\n                    ]}\r\n                    values={[\r\n                        selectedHeroData.best && selectedHeroData.best.eliminationsMostInGame,\r\n                        selectedHeroData.best && selectedHeroData.best.allDamageDoneMostInGame,\r\n                        selectedHeroData.best && selectedHeroData.best.barrierDamageDoneMostInGame,\r\n                        selectedHeroData.best && selectedHeroData.best.objectiveKillsMostInGame,\r\n                        selectedHeroData.assists && selectedHeroData.assists.healingDoneMostInGame,\r\n                        selectedHeroData.best && selectedHeroData.best.objectiveTimeMostInGame,\r\n                        selectedHeroData.assists && selectedHeroData.assists.offensiveAssistsMostInGame,\r\n                        selectedHeroData.assists && selectedHeroData.assists.defensiveAssistsMostInGame,\r\n                        selectedHeroData.best && selectedHeroData.best.timeSpentOnFireMostInGame\r\n                    ]}\r\n                />\r\n\r\n                <Table\r\n                    title={'AVERAGE PER 10 MIN: ' + selectedHero.label}\r\n                    keys={[\r\n                        'ELIMINATIONS',\r\n                        'DAMAGE DONE',\r\n                        'BARRIER DAMAGE DONE',\r\n                        'OBJECTIVE KILLS',\r\n                        'HEALING DONE',\r\n                        'OBJECTIVE TIME',\r\n                        'OFFENSIVE ASSISTS',\r\n                        'DEFENSIVE ASSISTS',\r\n                        'ON FIRE',\r\n                        'DEATHS'\r\n                    ]}\r\n                    values={[\r\n                        selectedHeroData.average && selectedHeroData.average.eliminationsAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.allDamageDoneAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.barrierDamageDoneAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.objectiveKillsAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.healingDoneAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.objectiveTimeAvgPer10Min,\r\n                        selectedHeroData.assists && selectedHeroData.assists.offensiveAssistsAvgPer10Min,\r\n                        selectedHeroData.assists && selectedHeroData.assists.defensiveAssistsAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.timeSpentOnFireAvgPer10Min,\r\n                        selectedHeroData.average && selectedHeroData.average.deathsAvgPer10Min\r\n                    ]}\r\n                />\r\n\r\n            </Masonry>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React, {useState} from 'react';\r\nimport './Element.scss';\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst Element = ({avatarURL, nickName, date, isLocked, onLock, onUnlock, onCopy, onDelete}) => {\r\n\r\n    const [isButtonPanelOpen, setIsButtonPanelOpen] = useState(false);\r\n\r\n    return (\r\n        <div className='history__element'>\r\n            <img\r\n                className='element__avatar'\r\n                src={avatarURL}\r\n                alt='avatar'\r\n            />\r\n            <div className='element__text-wrapper'>\r\n                <p className='element__nick-name'>{nickName}</p>\r\n                <p className='element__date'>{date}</p>\r\n            </div>\r\n            {isButtonPanelOpen &&\r\n                <div className='element__button-panel'>\r\n                    <Button\r\n                        className='button-panel__button'\r\n                        imageURL={isLocked ? 'https://tinyurl.com/y72wofb5' : 'https://tinyurl.com/ya7332ep'}\r\n                        onClick={() => isLocked ? onUnlock() : onLock()}\r\n                    />\r\n                    <Button\r\n                        className='button-panel__button'\r\n                        imageURL='https://tinyurl.com/yd4y5ynh'\r\n                        onClick={onCopy}\r\n                    />\r\n                    <Button\r\n                        className='button-panel__button'\r\n                        imageURL='https://tinyurl.com/y83lgpnw'\r\n                        onClick={onDelete}\r\n                    />\r\n                </div>\r\n            }\r\n            <Button\r\n                className='element__switch-display-button-panel'\r\n                imageURL={isButtonPanelOpen ? 'https://tinyurl.com/y6v8uyz2' : 'https://tinyurl.com/ybbq4wvd'}\r\n                onClick={() => setIsButtonPanelOpen(!isButtonPanelOpen)}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Element;","import React, {useState, useEffect} from 'react';\r\nimport './History.scss';\r\nimport Element from \"./Element/Element\";\r\n\r\n\r\nconst units = [\r\n    {value: ' ms', number: 1000},\r\n    {value: ' seconds', number: 60},\r\n    {value: ' minutes', number: 60},\r\n    {value: ' hrs', number: 24},\r\n    {value: ' days', number: 365},\r\n    {value: ' years'}\r\n];\r\n\r\n\r\nfunction howLongAgo(timestamp) {\r\n    let difference = Date.now() - new Date(timestamp).getTime();\r\n    let result = null;\r\n\r\n    for (let unit of units) {\r\n        if (difference < unit.number) {\r\n            result = Math.round(difference) + unit.value + ' ago';\r\n            break;\r\n        } else difference /= unit.number;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\nconst History = () => {\r\n\r\n    const [storage, updateStorage] = useState(JSON.parse(localStorage.getItem('storage')) || []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('storage', JSON.stringify(storage));\r\n    }, [storage]);\r\n\r\n    function onLock(timestamp) {\r\n        const storageCopy = [].concat(storage);\r\n        const elementForLock = storageCopy.find(element => element.timestamp === timestamp);\r\n\r\n        if (storageCopy.reduce((accumulator, currentValue) => accumulator + (currentValue.isLocked ? 1 : 0), 0) === 3) {\r\n            for (let i = storageCopy.length - 1; i > 0; i--) { //if the history storage has 3 locked elements(max 3 locked), then unlock the oldest of them\r\n                if (storageCopy[i].isLocked) {\r\n                    storageCopy[i].isLocked = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        storageCopy.map(element => {\r\n            if (element === elementForLock) {\r\n                element.isLocked = true;\r\n            }\r\n            return element;\r\n        });\r\n\r\n        updateStorage(storageCopy);\r\n    }\r\n\r\n    function onUnlock(timestamp) {\r\n        const storageCopy = [].concat(storage);\r\n        const elementForUnlock = storageCopy.find(element => element.timestamp === timestamp);\r\n\r\n        storageCopy.map(element => {\r\n            if (element === elementForUnlock) {\r\n                element.isLocked = false;\r\n            }\r\n            return element;\r\n        });\r\n\r\n        updateStorage(storageCopy);\r\n    }\r\n\r\n    function onCopy(string) {\r\n        navigator.clipboard.writeText(string)\r\n            .then(() => {\r\n                // Do something\r\n            })\r\n            .catch(err => {\r\n                // Do something\r\n            });\r\n    }\r\n\r\n    function onDelete(timestamp) {\r\n        let storageCopy = [].concat(storage);\r\n        const elementForDelete = storageCopy.find(element => element.timestamp === timestamp);\r\n\r\n        updateStorage(storageCopy.filter(element => element.timestamp !== elementForDelete.timestamp));\r\n    }\r\n\r\n    return (\r\n        <div className='history'>\r\n\r\n            {storage.some(element => element.isLocked) &&\r\n                <>\r\n                    <div className='history__title'>LOCKED</div>\r\n                    {storage\r\n                        .filter(element => element.isLocked)\r\n                        .map(element =>\r\n                            <Element\r\n                                key={element.timestamp}\r\n                                avatarURL={element.avatarURL}\r\n                                nickName={element.nickName}\r\n                                date={howLongAgo(element.timestamp)}\r\n                                isLocked={element.isLocked}\r\n                                onLock={() => onLock(element.timestamp)}\r\n                                onUnlock={() => onUnlock(element.timestamp)}\r\n                                onCopy={() => onCopy(element.searchRequest)}\r\n                                onDelete={() => onDelete(element.timestamp)}\r\n                            />\r\n                        )}\r\n                </>\r\n            }\r\n\r\n            {storage.some(element => !element.isLocked) &&\r\n                <>\r\n                    <div className='history__title'>HISTORY</div>\r\n                    {storage\r\n                        .filter(element => !element.isLocked)\r\n                        .map(element =>\r\n                            <Element\r\n                                key={element.timestamp}\r\n                                avatarURL={element.avatarURL}\r\n                                nickName={element.nickName}\r\n                                date={howLongAgo(element.timestamp)}\r\n                                isLocked={element.isLocked}\r\n                                onLock={() => onLock(element.timestamp)}\r\n                                onUnlock={() => onUnlock(element.timestamp)}\r\n                                onCopy={() => onCopy(element.searchRequest)}\r\n                                onDelete={() => onDelete(element.timestamp)}\r\n                            />\r\n                        )}\r\n                </>\r\n            }\r\n\r\n            {storage.length === 0 &&\r\n                <div className='history__empty'>THERE IS NOTHING...</div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default History;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({children}) => {\r\n  return (\r\n      <footer className='page-footer'>\r\n          {children}\r\n      </footer>\r\n  )\r\n};\r\n\r\nexport default Footer;","import React, {useState, useEffect} from 'react';\r\nimport './App.scss';\r\nimport Header from \"./components/Header/Header\";\r\nimport Logo from \"./components/UI/Logo/Logo\";\r\nimport NavList from \"./components/UI/NavList/NavList\";\r\nimport HamburgerMenu from 'react-hamburger-menu';\r\nimport SideMenu from \"./components/SideMenu/SideMenu\";\r\nimport Main from \"./components/Main/Main\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport History from \"./components/History/History\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\n\r\nfunction battleTagValidation(value) {\r\n    const validationObject = {};\r\n\r\n    if (!value || !value.trim()) {\r\n        validationObject.error = 'This field must contain some characters!';\r\n        return validationObject;\r\n    }\r\n\r\n    if (!/^[a-zA-Z]{2,15} [a-zA-Z][a-zA-Z0-9]{2,11}#[\\d]{4,5}$/ig.test(value.trim())) {\r\n        validationObject.error = 'Invalid format!';\r\n        return validationObject;\r\n    }\r\n\r\n    const normalizedPlatforms = {\r\n        'pc': 'pc',\r\n        'nintendo': 'nintendo-switch',\r\n        'ns': 'nintendo-switch',\r\n        'switch': 'nintendo-switch',\r\n        'nintendoswitch': 'nintendo-switch',\r\n        'nintendo-switch': 'nintendo-switch',\r\n        'xbox': 'xbl',\r\n        'xboxone': 'xbl',\r\n        'xbo': 'xbl',\r\n        'xbl': 'xbl',\r\n        'playstation': 'psn',\r\n        'playstationfour': 'psn',\r\n        'ps': 'psn',\r\n        'psfour': 'psn',\r\n        'psn': 'psn'\r\n    };\r\n\r\n    let splittedValue = value.split(' ');\r\n\r\n    if(normalizedPlatforms[splittedValue[0].toLowerCase()]){\r\n        splittedValue[0] = normalizedPlatforms[splittedValue[0].toLowerCase()];\r\n    } else {\r\n        validationObject.error = 'Invalid platform!';\r\n        return validationObject;\r\n    }\r\n\r\n    validationObject.success = true;\r\n    validationObject.value = splittedValue;\r\n\r\n    return validationObject;\r\n}\r\n\r\n\r\nfunction saveToLocalStorage(object) {\r\n\r\n    const storage = JSON.parse(localStorage.getItem('storage'))  || [];\r\n\r\n    if(storage.length === 18) { //if the history storage length is 18(max length), then delete the first element from the end, which doesn't locked\r\n        for(let i = storage.length - 1; i > 0; i--){\r\n            if(!storage[i].isLocked){\r\n                storage.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    storage.unshift(object);\r\n\r\n    localStorage.setItem('storage', JSON.stringify(storage));\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n    const [openedPage, setOpenedPage] = useState(0);\r\n    const [isSideBarMenuOpen, setIsSideBarMenuOpen] = useState(false);\r\n    const [searchErrorMessage, setSearchErrorMessage] = useState(null);\r\n    const [searchRequest, setSearchRequest] = useState(null);\r\n    const [searchResult, setSearchResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({top: 0, behavior: 'smooth'});\r\n    }, [openedPage]);\r\n\r\n    useEffect(() => {\r\n        if(!searchResult) return;\r\n\r\n        const object = {\r\n            avatarURL: searchResult.icon,\r\n            nickName: searchResult.name,\r\n            timestamp: Date.now(),\r\n            searchRequest,\r\n            isLocked: false\r\n        };\r\n\r\n        saveToLocalStorage(object);\r\n    }, [searchResult]);\r\n\r\n    const navElementNames = ['SEARCH', 'HISTORY'];\r\n\r\n    function searchProfile(request) {\r\n        const validationResult = battleTagValidation(request);\r\n\r\n        if (validationResult.success) {\r\n            setSearchErrorMessage(null);\r\n            setSearchRequest(validationResult.value.join(' '));\r\n\r\n            let [platform, battleTag] = validationResult.value;\r\n            battleTag = battleTag.replace('#', '-');\r\n\r\n            fetch(`https://ow-api.com/v1/stats/${platform}/*/${battleTag}/complete`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if (!data) setSearchErrorMessage('Something went wrong...');\r\n                    else if (data.error) setSearchErrorMessage(data.error);\r\n                    else if (data.private) setSearchErrorMessage('This profile is private!');\r\n                    else {\r\n                        setSearchErrorMessage(null);\r\n                        setSearchResult(data);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    setSearchErrorMessage(error.toString());\r\n                });\r\n        } else setSearchErrorMessage(validationResult.error);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n\r\n            <Header>\r\n                <Logo\r\n                    mainLogoURL='https://tinyurl.com/yc996fkp'\r\n                    smallScreenLogoURL='https://tinyurl.com/y8g6qp5a'\r\n                />\r\n                <NavList\r\n                    elementNames={navElementNames}\r\n                    setSelectedPage={setOpenedPage}\r\n                />\r\n                <HamburgerMenu\r\n                    className='hamburger-menu'\r\n                    isOpen={isSideBarMenuOpen}\r\n                    menuClicked={() => setIsSideBarMenuOpen(!isSideBarMenuOpen)}\r\n                    strokeWidth={3}\r\n                    color='white'\r\n                />\r\n                {isSideBarMenuOpen &&\r\n                    <SideMenu\r\n                        className='page-header__side-menu'\r\n                        elementNames={navElementNames}\r\n                        setSelectedPage={setOpenedPage}\r\n                        activeElement={openedPage}\r\n                        closeSideMenu={() => setIsSideBarMenuOpen(false)}\r\n                    />\r\n                }\r\n            </Header>\r\n\r\n            <Main backgroundURL='https://tinyurl.com/ybamwhem'>\r\n                {openedPage === 0 &&\r\n                    <>\r\n                        <div className='search-wrapper'>\r\n                            <Search\r\n                                placeholder='platform battletag'\r\n                                onSearch={searchProfile}>\r\n                                {searchErrorMessage ?\r\n                                    <span className='search-wrapper__error-message'>{searchErrorMessage}</span> :\r\n                                    <span className='search-wrapper__hint'>For example - pc Kowalski#21485</span>\r\n                                }\r\n                            </Search>\r\n                        </div>\r\n                        {searchResult &&\r\n                            <Profile key={searchResult.name} data={searchResult}/>\r\n                        }\r\n                    </>\r\n                }\r\n                {openedPage === 1 &&\r\n                    <History/>\r\n                }\r\n            </Main>\r\n\r\n            <Footer>\r\n                <a\r\n                    className='page-footer__link'\r\n                    href='https://github.com/CoffeeOut/react-overwatch-profile-checker'\r\n                    rel='noopener noreferrer'\r\n                    target='_blank'>View source on Github\r\n                </a>\r\n                <span className='page-footer__text'>@2020 Overwatch Profile Checker</span>\r\n            </Footer>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}